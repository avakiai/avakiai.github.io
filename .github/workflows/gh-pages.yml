name: github pages # see https://gohugo.io/hosting-and-deployment/hosting-on-github/

on:
  push:
    branches:
      - master  # Set a branch to deploy
  pull_request:
  workflow_dispatch: # allows you to run this workflow manually from Actions
  
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.115.4
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           submodules: true  # Fetch Hugo themes (true OR recursive)
#           fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod
      
#      # - name: Update theme
#         # (Optional)If you have the theme added as submodule, you can pull it and use the most updated version
#      #   run: git submodule update --init --recursive

#       - name: Setup hugo
#         uses: peaceiris/actions-hugo@v2
#         with:
#           hugo-version: 'latest'
#           # extended: true

#       - name: Build
#         # remove --minify tag if you do not need it
#         # docs: https://gohugo.io/hugo-pipes/minification/
#         run: hugo --minify

#       - name: Deploy
#         uses: peaceiris/actions-gh-pages@v3
#         if: ${{ github.ref == 'refs/heads/master' }}
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./public
       # with:
       #   personal_token: ${{ secrets.TOKEN }}
       #  external_repository: avakiai/avakiai.github.io
       #   publish_dir: ./public
          #   keep_files: true
        #  user_name: ava
        #  user_email: avakiai@gmail.com
        #  publish_branch: master
        #   cname: example.com